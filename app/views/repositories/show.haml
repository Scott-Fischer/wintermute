= content_link_to '‚Üê Back to list', repositories_path, class: 'btn btn-outline-primary'

.card.mt-3
  .card-header
    .d-flex
      %h3.mr-auto= @repository.name
      .align-self-center
        = render 'shared/subscription', record: @repository
        - if current_power.include_record?(:updatable, @repository)
          = modal_link_to 'Edit', edit_repository_path(@repository), class: 'btn btn-outline-secondary'
    %small
      Added by
      %strong= @repository.user.to_s
      #{time_ago_in_words(@repository.created_at)} ago
      = bullet
      #{@repository.user_subscriptions.count} subscriptions

  %ul.list-group.list-group-flush#list-items
    %li.list-group-item
      - if @repository.last_synchronized_at.blank?
        .alert.alert-info{role: 'alert'}
          %strong Notice:
          This #{Repository.model_name.human} does not show all information from Github, but it will be updated within the
          next few hours. Thanks for your patient!
      - if @repository.preview_image.present?
        = image_tag(@repository.preview_image.medium.url, class: 'img-thumbnail rounded mx-auto mb-4 mt-4 d-block', alt: repository_preview_image_alternative_text(@repository))
      %dl
        %dt= Repository.human_attribute_name(:state)
        %dd= humanized_state(@repository.state)

        %dt= Repository.human_attribute_name(:delivery_model)
        %dd= @repository.humanized_delivery_model

        %dt= Repository.human_attribute_name(:description)
        %dd= format_text(@repository.description)

        %dt= Repository.human_attribute_name(:repository_url)
        %dd= external_link_to @repository.repository_url_preview, @repository.repository_url_preview

        %dt Popularity
        %dd
          .row
            .col
              #{Repository.human_attribute_name(:total_stars)}: #{format_string(@repository.total_stars)}
            .col
              #{Repository.human_attribute_name(:total_watchers)}: #{format_string(@repository.total_watchers)}
            .col
              #{Repository.human_attribute_name(:total_issues)}: #{format_string(@repository.total_issues)}

        %dt= Repository.human_attribute_name(:languages)
        %dd= @repository.languages.join(', ').presence || ndash

        %dt= Repository.human_attribute_name(:homepage_url)
        %dd
          - if @repository.homepage_url.present?
            = external_link_to @repository.homepage_url, @repository.homepage_url
          - else
            = ndash

        %dt= Repository.human_attribute_name(:licence)
        %dd= format_string(@repository.licence)

        %dt= Repository.human_attribute_name(:user)
        %dd= external_link_to @repository.user.nickname, "https://github.com/#{@repository.user.nickname}"

        %dt Recent changes
        - if @repository.last_commits_at.present?
          %dd= Repository::RecentChangesAnalyzer.new(@repository).count_commits_for_the_last_day
          %dd= Repository::RecentChangesAnalyzer.new(@repository).count_commits_for_the_last_week
          %dd= Repository::RecentChangesAnalyzer.new(@repository).count_commits_for_the_last_month
          %dd= Repository::RecentChangesAnalyzer.new(@repository).count_commits_for_the_last_year
        - else
          %dd= ndash

    - @repository.messages_with_default_order.each do |message|
      %li.list-group-item
        .row
          .col-10
            %small
              %strong= message.user.to_s
              replied
              #{time_ago_in_words(message.created_at)} ago
            .mt-3= format_markdown(message.body)
          .col-2.d-flex
            .mr-auto
            %div
              - if current_power.include_record?(:updatable, message)
                = modal_link_to 'Edit', edit_message_path(message), class: 'btn btn-outline-secondary btn-sm'
    %li.list-group-item= render 'shared/message', record: @repository, reveal: '#list-items:after'
